$utilities: () !default;

$utilities: map-merge(("flex": (responsive: true,
      property: flex,
      values: (fill: 1 1 auto)),
    "flex-direction": (responsive: true,
      property: flex-direction,
      class: flex,
      values: row column row-reverse column-reverse),
    "flex-grow": (responsive: true,
      property: flex-grow,
      class: flex,
      values: (grow-0: 0,
        grow-1: 1,
      )),
    "flex-shrink": (responsive: true,
      property: flex-shrink,
      class: flex,
      values: (shrink-0: 0,
        shrink-1: 1,
      )),
    "flex-wrap": (responsive: true,
      property: flex-wrap,
      class: flex,
      values: wrap nowrap wrap-reverse),
    "justify-content": (responsive: true,
      property: justify-content,
      values: (start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
      )),
    "align-items": (responsive: true,
      property: align-items,
      values: (start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      )),
    "align-content": (responsive: true,
      property: align-content,
      values: (start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        stretch: stretch,
      )),
    "align-self": (responsive: true,
      property: align-self,
      values: (auto: auto,
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      )),
    "order": (responsive: true,
      property: order,
      values: (first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6,
      ),
    )),
  $utilities);

$utilities: map-get-multiple($utilities,
  ("order",
    "flex",
    "flex-direction",
    "flex-grow",
    "flex-shrink"
    "flex-wrap",
    "justify-content",
    "align-items",
    "align-content",
    "align-self"
  ));

@each $breakpoint in map-keys($grid-breakpoints) {

  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $key,
    $utility in $utilities {

      @if type-of($utility)=="map"and (map-get($utility, responsive) or $infix=="") {
        @include generate-utility($utility, $infix);
      }
    }
  }
}